// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `get_captcha_data`, `get_csrf`, `get_regno`, `initial_pageload`, `login_load`, `login_request`, `make_client`, `succeslogin`, `update_vtop_status`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Iclient>>
abstract class Iclient implements RustOpaqueInterface {
  String get captcha;

  String get csrf;

  bool get loginactive;

  String get username;

  set captcha(String captcha);

  set csrf(String csrf);

  set loginactive(bool loginactive);

  set username(String username);

  Future<(bool, String)> getAttendance({required String semid});

  Future<(bool, String)> getAttendancePage();

  Future<Uint8List> getCookies();

  Future<(bool, String)> getCourseClasses({
    required String semid,
    required String classid,
  });

  Future<(bool, String)> getCourseCourses({required String semid});

  Future<(bool, String)> getCourseDlist({
    required String semid,
    required String classid,
    required String erpId,
  });

  Future<(bool, String)> getCoursePage();

  Future<(bool, String)> getExamShedule({required String semid});

  Future<(bool, String)> getExamSheduleSems();

  Future<(bool, String)> getFullAttendance({
    required String courseId,
    required String semid,
    required String courseType,
  });

  Future<String?> getLoginPageError();

  Future<(bool, String)> getMarksList({required String semid});

  Future<(bool, String)> getMarksPage();

  Future<(bool, String)> getTimetable({required String semid});

  Future<(bool, String)> getTimetablePage();

  Future<(bool, String)> login({required String cap});

  Future<(bool, String)> loginPageload();

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<Iclient> newInstance() =>
      RustLib.instance.api.crateApiVtopClientIclientNew();

  Future<void> updateCred({required String username, required String password});
}
