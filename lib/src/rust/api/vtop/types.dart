// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class RAtCourse {
  final String serial;
  final String category;
  final String courseName;
  final String courseCode;
  final String courseType;
  final String facultyDetail;
  final String classesAttended;
  final String totalClasses;
  final String attendancePercentage;
  final String attendenceFatCat;
  final String debarStatus;
  final String courseId;

  const RAtCourse({
    required this.serial,
    required this.category,
    required this.courseName,
    required this.courseCode,
    required this.courseType,
    required this.facultyDetail,
    required this.classesAttended,
    required this.totalClasses,
    required this.attendancePercentage,
    required this.attendenceFatCat,
    required this.debarStatus,
    required this.courseId,
  });

  @override
  int get hashCode =>
      serial.hashCode ^
      category.hashCode ^
      courseName.hashCode ^
      courseCode.hashCode ^
      courseType.hashCode ^
      facultyDetail.hashCode ^
      classesAttended.hashCode ^
      totalClasses.hashCode ^
      attendancePercentage.hashCode ^
      attendenceFatCat.hashCode ^
      debarStatus.hashCode ^
      courseId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RAtCourse &&
          runtimeType == other.runtimeType &&
          serial == other.serial &&
          category == other.category &&
          courseName == other.courseName &&
          courseCode == other.courseCode &&
          courseType == other.courseType &&
          facultyDetail == other.facultyDetail &&
          classesAttended == other.classesAttended &&
          totalClasses == other.totalClasses &&
          attendancePercentage == other.attendancePercentage &&
          attendenceFatCat == other.attendenceFatCat &&
          debarStatus == other.debarStatus &&
          courseId == other.courseId;
}

class RAttendanceList {
  final String serial;
  final String date;
  final String slot;
  final String dayTime;
  final String status;
  final String remark;

  const RAttendanceList({
    required this.serial,
    required this.date,
    required this.slot,
    required this.dayTime,
    required this.status,
    required this.remark,
  });

  @override
  int get hashCode =>
      serial.hashCode ^
      date.hashCode ^
      slot.hashCode ^
      dayTime.hashCode ^
      status.hashCode ^
      remark.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RAttendanceList &&
          runtimeType == other.runtimeType &&
          serial == other.serial &&
          date == other.date &&
          slot == other.slot &&
          dayTime == other.dayTime &&
          status == other.status &&
          remark == other.remark;
}

class RTimetable {
  final String serial;
  final String day;
  final String slot;
  final String courseCode;
  final String courseType;
  final String roomNo;
  final String block;
  final String startTime;
  final String endTime;

  const RTimetable({
    required this.serial,
    required this.day,
    required this.slot,
    required this.courseCode,
    required this.courseType,
    required this.roomNo,
    required this.block,
    required this.startTime,
    required this.endTime,
  });

  @override
  int get hashCode =>
      serial.hashCode ^
      day.hashCode ^
      slot.hashCode ^
      courseCode.hashCode ^
      courseType.hashCode ^
      roomNo.hashCode ^
      block.hashCode ^
      startTime.hashCode ^
      endTime.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RTimetable &&
          runtimeType == other.runtimeType &&
          serial == other.serial &&
          day == other.day &&
          slot == other.slot &&
          courseCode == other.courseCode &&
          courseType == other.courseType &&
          roomNo == other.roomNo &&
          block == other.block &&
          startTime == other.startTime &&
          endTime == other.endTime;
}
