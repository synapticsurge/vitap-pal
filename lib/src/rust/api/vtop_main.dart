// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'vtop/client.dart';
import 'vtop/types.dart';

// These functions are ignored because they are not marked as `pub`: `login_vtop`

Iclient getClient() => RustLib.instance.api.crateApiVtopMainGetClient();

Future<void> checkClient({
  required Iclient iclient,
  required String username,
  required String password,
}) => RustLib.instance.api.crateApiVtopMainCheckClient(
  iclient: iclient,
  username: username,
  password: password,
);

Future<(bool, String)> onstartRun({
  required Iclient iclient,
  required String username,
  required String password,
}) => RustLib.instance.api.crateApiVtopMainOnstartRun(
  iclient: iclient,
  username: username,
  password: password,
);

Future<(bool, String, List<String>)> rustTimetableSemid({
  required Iclient client,
}) => RustLib.instance.api.crateApiVtopMainRustTimetableSemid(client: client);

Future<(bool, String, List<RTimetable>)> rustTimetable({
  required Iclient client,
  required String semid,
}) => RustLib.instance.api.crateApiVtopMainRustTimetable(
  client: client,
  semid: semid,
);

Future<(bool, String, List<RAtCourse>)> rustAttendance({
  required Iclient client,
  required String semid,
}) => RustLib.instance.api.crateApiVtopMainRustAttendance(
  client: client,
  semid: semid,
);

Future<(bool, String, List<RAttendanceList>)> rustFullAttendance({
  required Iclient client,
  required String semid,
  required String courseId,
  required String courseType,
}) => RustLib.instance.api.crateApiVtopMainRustFullAttendance(
  client: client,
  semid: semid,
  courseId: courseId,
  courseType: courseType,
);

Future<(bool, String, List<RMarksCourse>)> rustMarksList({
  required Iclient client,
  required String semid,
}) => RustLib.instance.api.crateApiVtopMainRustMarksList(
  client: client,
  semid: semid,
);

Future<(bool, String, List<RscheduleExam>)> rustExamShedule({
  required Iclient client,
  required String semid,
}) => RustLib.instance.api.crateApiVtopMainRustExamShedule(
  client: client,
  semid: semid,
);

Future<Uint8List> rustGetCookies({required Iclient client}) =>
    RustLib.instance.api.crateApiVtopMainRustGetCookies(client: client);
